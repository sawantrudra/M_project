{"version":3,"sources":["./src/app/app.component.html","./src/app/favorite/favorite.component.html","./src/app/forgot-password/forgot-password.component.html","./src/app/home/home.component.html","./src/app/landing/landing.component.html","./src/app/login/login.component.html","./src/app/posts/posts.component.html","./src/app/profile/profile.component.html","./src/app/reset-password/reset-password.component.html","./src/app/search/search.component.html","./src/app/shared/footer/footer.component.html","./src/app/shared/navbar/navbar.component.html","./src/app/signup/signup.component.html","./src/app/support/support.component.html","./src/app/verification/registrationConfirm.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/favorite/favorite.component.css","./src/app/favorite/favorite.component.ts","./src/app/forgot-password/forgot-password.component.css","./src/app/forgot-password/forgot-password.component.ts","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/home/home.module.ts","./src/app/landing/landing.component.css","./src/app/landing/landing.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/posts/dnd.directive.ts","./src/app/posts/posts.component.css","./src/app/posts/posts.component.ts","./src/app/profile/profile.component.scss","./src/app/profile/profile.component.ts","./src/app/reset-password/reset-password.component.css","./src/app/reset-password/reset-password.component.ts","./src/app/search/popup.component.ts","./src/app/search/search.component.css","./src/app/search/search.component.ts","./src/app/shared/Questions.ts","./src/app/shared/auth.service.ts","./src/app/shared/compressor.service.ts","./src/app/shared/constants.service.ts","./src/app/shared/encode.service.ts","./src/app/shared/footer/footer.component.scss","./src/app/shared/footer/footer.component.ts","./src/app/shared/navbar/navbar.component.scss","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/remember.service.ts","./src/app/shared/rest-api.service.ts","./src/app/signup/signup.component.scss","./src/app/signup/signup.component.ts","./src/app/support/support.component.css","./src/app/support/support.component.ts","./src/app/verification/registrationConfirm.component.scss","./src/app/verification/registrationConfirm.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","export default \"<main>\\n    <div class=\\\"position-relative\\\">\\n        <!-- shape Hero -->\\n        <section class=\\\"section section-lg section-shaped pb-250\\\">\\n            <div class=\\\"shape shape-style-1 shape-default\\\">\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n            </div>\\n            <div class=\\\"container py-lg-md d-flex\\\">\\n                <div class=\\\"col px-0\\\">\\n                    <div class=\\\"card card-profile shadow mt-50\\\" *ngIf=\\\"noPosts\\\">\\n                        <div class=\\\"px-4\\\">\\n                            <div class=\\\"text-center pt-3 pb-3\\\">\\n                                <h4>No Wishlists Yet!</h4>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"card card-lift--hover shadow mt-50\\\" *ngFor=\\\"let post of userPosts\\\">\\n                        <div class=\\\"px-4\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"column\\\">\\n                                    <ngb-carousel>\\n                                        <ng-template ngbSlide *ngFor=\\\"let img of post.images\\\">\\n                                            <img [src]=\\\"getImage(img.pic)\\\" alt=\\\"Image\\\" height=\\\"150px\\\" width=\\\"150px\\\">\\n                                        </ng-template>\\n                                    </ngb-carousel>\\n                                </div>\\n                                <div class=\\\"column postValue\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <h2>{{post.title}}</h2>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <h5>{{post.description}}</h5>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <h6>Posted by: {{post.user.firstName}} {{post.user.lastName}}</h6>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"column\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"toggleSelected(post)\\\">\\n                                        <span>\\n                                            <i class=\\\"fa fa-heart-o\\\" style=\\\"color: red; font-size: 24px;\\\" *ngIf=\\\"!post.selected\\\"></i>\\n                                            <i class=\\\"fa fa-heart\\\" style=\\\"color: red; font-size: 24px;\\\" *ngIf=\\\"post.selected\\\"></i>\\n                                        </span>\\n                                        </button>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <input #bid name=\\\"bid\\\" id=\\\"bid\\\" type=\\\"number\\\" style=\\\"width: 100px; padding: 8px; margin-bottom: 10px;\\\" [(ngModel)]=\\\"post.bidAmt\\\" value=\\\"post.minBid\\\">\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 20px;\\\" (click)=\\\"bidPost(post)\\\">\\n                                        Bid\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- SVG separator -->\\n            <div class=\\\"separator separator-bottom separator-skew\\\">\\n                <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n        </svg>\\n            </div>\\n        </section>\\n        <!-- 1st Hero Variation -->\\n    </div>\\n</main>\"","export default \"<main>\\n    <section class=\\\"section section-shaped section-lg\\\">\\n        <div class=\\\"shape shape-style-1 bg-gradient-default\\\">\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n        </div>\\n        <div class=\\\"container pt-lg-md\\\">\\n            <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-lg-5\\\">\\n                    <div class=\\\"card bg-secondary shadow border-0\\\">\\n                        <div class=\\\"card-body px-lg-5 py-lg-5\\\" *ngIf=\\\"!security\\\">\\n                            <div class=\\\"input-group input-group-alternative\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                                </div>\\n                                <input name=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" [(ngModel)]=\\\"userName\\\">\\n                            </div>\\n                            <div *ngIf=\\\"isNull\\\" class=\\\"alert alert-danger\\\">\\n                                Email is required.\\n                            </div>\\n                            <div class=\\\"text-center\\\">\\n                                <button [disabled]=\\\"submitted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"card-body px-lg-5 py-lg-5\\\" *ngIf=\\\"security\\\">\\n                            <div class=\\\"text-center mb-4\\\">\\n                                <small>{{securityQuestion}}</small>\\n                            </div>\\n                            <div class=\\\"input-group input-group-alternative\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-edit\\\"></i></span>\\n                                </div>\\n                                <input name=\\\"answer\\\" class=\\\"form-control\\\" placeholder=\\\"Answer\\\" type=\\\"text\\\" [(ngModel)]=\\\"answer\\\" required>\\n                            </div>\\n                            <div *ngIf=\\\"isNull\\\" class=\\\"alert alert-danger\\\">\\n                                Answer is required.\\n                            </div>\\n                            <div *ngIf=\\\"wrongAnswer\\\" class=\\\"alert alert-danger\\\">\\n                                Answer is incorrect.\\n                            </div>\\n                            <div class=\\\"text-center\\\">\\n                                <button [disabled]=\\\"submitted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"checkAnswer()\\\">Submit</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</main>\"","export default \"<main>\\n    <div class=\\\"position-relative\\\">\\n        <!-- Hero for FREE version -->\\n        <section class=\\\"section section-lg section-hero section-shaped\\\">\\n            <!-- Background circles -->\\n            <div class=\\\"shape shape-style-1 shape-primary\\\">\\n                <span class=\\\"span-150\\\"></span>\\n                <span class=\\\"span-50\\\"></span>\\n                <span class=\\\"span-50\\\"></span>\\n                <span class=\\\"span-75\\\"></span>\\n                <span class=\\\"span-100\\\"></span>\\n                <span class=\\\"span-75\\\"></span>\\n                <span class=\\\"span-50\\\"></span>\\n                <span class=\\\"span-100\\\"></span>\\n                <span class=\\\"span-50\\\"></span>\\n                <span class=\\\"span-100\\\"></span>\\n            </div>\\n            <div class=\\\"container shape-container d-flex align-items-center py-lg\\\">\\n                <div class=\\\"col px-0\\\">\\n                    <div class=\\\"row align-items-center justify-content-center\\\">\\n                        <div class=\\\"col-lg-6 text-center\\\">\\n                            <img src=\\\"assets/img/brand/logo.png\\\" style=\\\"width: 200px;\\\" class=\\\"img-fluid\\\">\\n                            <p class=\\\"lead text-white\\\">You choose what You pay. It's Free!</p>\\n                            <div class=\\\"btn-wrapper mt-5\\\">\\n                                <a routerLink=\\\"/login\\\" class=\\\"btn btn-lg btn-white btn-icon mb-3 mb-sm-0\\\">\\n                                    <span class=\\\"btn-inner--text\\\">Log In</span>\\n                                </a>\\n                                <a routerLink=\\\"/register\\\" class=\\\"btn btn-lg btn-primary btn-icon mb-3 mb-sm-0\\\">\\n                                    <span class=\\\"btn-inner--text\\\">Sign Up for Free</span>\\n                                </a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- SVG separator -->\\n            <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n                <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n        </svg>\\n            </div>\\n        </section>\\n    </div>\\n</main>\"","export default \"<main>\\n    <div class=\\\"position-relative\\\">\\n        <!-- shape Hero -->\\n        <section class=\\\"section section-lg section-shaped pb-250\\\">\\n            <div class=\\\"shape shape-style-1 shape-default\\\">\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n            </div>\\n            <div class=\\\"container py-lg-md d-flex\\\">\\n                <div class=\\\"col px-0\\\">\\n                    <div class=\\\"card card-profile shadow mt-50\\\" *ngIf=\\\"noPosts\\\">\\n                        <div class=\\\"px-4\\\">\\n                            <div class=\\\"text-center pt-3 pb-3\\\">\\n                                <h4>No posts</h4>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"card card-lift--hover shadow mt-50\\\" *ngFor=\\\"let post of userPosts\\\">\\n                        <div class=\\\"px-4\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"column\\\">\\n                                    <ngb-carousel>\\n                                        <ng-template ngbSlide *ngFor=\\\"let img of post.images\\\">\\n                                            <img [src]=\\\"getImage(img.pic)\\\" alt=\\\"Image\\\" height=\\\"150px\\\" width=\\\"150px\\\">\\n                                        </ng-template>\\n                                    </ngb-carousel>\\n                                </div>\\n                                <div class=\\\"column postValue\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <h2>{{post.title}}</h2>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <h5>{{post.description}}</h5>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <h6>Posted by: {{post.user.firstName}} {{post.user.lastName}}</h6>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"column\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"toggleSelected(post)\\\" style=\\\"margin-left: 20px;\\\">\\n                                        <span>\\n                                            <i class=\\\"fa fa-heart-o\\\" style=\\\"color: red; font-size: 24px;\\\" *ngIf=\\\"!post.selected\\\"></i>\\n                                            <i class=\\\"fa fa-heart\\\" style=\\\"color: red; font-size: 24px;\\\" *ngIf=\\\"post.selected\\\"></i>\\n                                        </span>\\n                                        </button>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <input #bid name=\\\"bid\\\" id=\\\"bid\\\" type=\\\"number\\\" style=\\\"width: 100px; padding: 8px; margin-bottom: 10px;\\\" [(ngModel)]=\\\"post.bidAmt\\\" value=\\\"post.minBid\\\">\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" style=\\\"margin-left: 20px;\\\" (click)=\\\"bidPost(post)\\\">\\n                                        Bid\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- SVG separator -->\\n            <div class=\\\"separator separator-bottom separator-skew\\\">\\n                <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n        </svg>\\n            </div>\\n        </section>\\n        <!-- 1st Hero Variation -->\\n    </div>\\n</main>\"","export default \"<main>\\n    <section class=\\\"section section-shaped section-lg\\\">\\n        <div class=\\\"shape shape-style-1 bg-gradient-default\\\">\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n        </div>\\n        <div class=\\\"container pt-lg-md\\\">\\n            <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-lg-5\\\">\\n                    <div class=\\\"card bg-secondary shadow border-0\\\">\\n                        <div class=\\\"card-header bg-white pb-5\\\">\\n                            <div class=\\\"text-muted text-center mb-3\\\">\\n                                <small>Sign in with</small>\\n                            </div>\\n                            <div class=\\\"btn-wrapper text-center\\\">\\n                                <a (click)=\\\"googleLogin()\\\" class=\\\"btn btn-neutral btn-icon\\\">\\n                                    <span class=\\\"btn-inner--icon\\\">\\n                    <img src=\\\"./assets/img/icons/common/google.svg\\\">\\n                  </span>\\n                                    <span class=\\\"btn-inner--text\\\">Google</span>\\n                                </a>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                            <div class=\\\"text-center text-muted mb-4\\\">\\n                                <small>Or sign in with credentials</small>\\n                            </div>\\n                            <form role=\\\"form\\\">\\n                                <div class=\\\"form-group mb-3\\\" [ngClass]=\\\"{'focused':focus===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                                        </div>\\n                                        <input name=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" [(ngModel)]=\\\"userName\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus1===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                                        </div>\\n                                        <input name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" (focus)=\\\"focus1=true\\\" (blur)=\\\"focus1=false\\\" [(ngModel)]=\\\"password\\\">\\n                                    </div>\\n                                </div>\\n                                <re-captcha (resolved)=\\\"resolved($event)\\\" siteKey=\\\"6LflJ_4UAAAAAPR6bM0EvBRSv93huK7Vny18eVlD\\\"></re-captcha>\\n                                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                                    <input class=\\\"custom-control-input\\\" id=\\\" customCheckLogin\\\" name=\\\"rememberMe\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"rememberMe\\\">\\n                                    <label class=\\\"custom-control-label\\\" for=\\\" customCheckLogin\\\">\\n                                        <span>Remember me</span>\\n                                    </label>\\n                                </div>\\n                                <div class=\\\"text-center\\\">\\n                                    <button type=\\\"submit\\\" (click)=\\\"login()\\\" class=\\\"btn btn-primary my-4\\\">Sign in</button>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row mt-3\\\">\\n                        <div class=\\\"col-6\\\">\\n                            <a [routerLink]=\\\"['/forgotPassword']\\\" class=\\\"text-light\\\">\\n                                <small>Forgot password?</small>\\n                            </a>\\n                        </div>\\n                        <div class=\\\"col-6 text-right\\\">\\n                            <a [routerLink]=\\\"['/register']\\\" class=\\\"text-light\\\">\\n                                <small>Create new account</small>\\n                            </a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</main>\"","export default \"<main class=\\\"profile-page\\\">\\n    <section class=\\\"section-profile-cover section-shaped my-0\\\">\\n        <!-- Circles background -->\\n        <div class=\\\"shape shape-style-1 shape-primary alpha-4\\\">\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n        </div>\\n        <!-- SVG separator -->\\n        <div class=\\\"separator separator-bottom separator-skew\\\">\\n            <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n                <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n            </svg>\\n        </div>\\n    </section>\\n    <section class=\\\"section\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\" mt--400\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-white mt-4\\\" (click)=\\\"newPostFunction()\\\" *ngIf=\\\"!newPost\\\">New post</button>\\n            </div>\\n            <div class=\\\"card card-profile shadow mt-50\\\" *ngIf=\\\"newPost\\\">\\n                <div class=\\\"px-4\\\">\\n                    <div class=\\\"text-center pt-3 pb-3\\\">\\n                        <div class=\\\"text-danger font-italic\\\">\\n                            <span class=\\\"text-danger font-weight-700\\\">{{maxFiles}}</span>\\n                        </div>\\n                        <div class=\\\"fileContainer\\\" appDnd (fileDropped)=\\\"onFileDropped($event)\\\">\\n                            <input type=\\\"file\\\" #itemImage multiple hidden accept=\\\".png, .jpg, .jpeg\\\" (change)=\\\"onFileDropped($event.target.files)\\\" />\\n                            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"63\\\" height=\\\"64\\\" viewBox=\\\"0 0 63 64\\\">\\n                                <g fill=\\\"#3B454F\\\" fill-rule=\\\"nonzero\\\">\\n                                    <path\\n                                        d=\\\"M42.656 15.135a1.953 1.953 0 0 1-1.391-.578L31.5 4.795l-9.765 9.762a1.97 1.97 0 1 1-2.785-2.785L30.106.616a1.97 1.97 0 0 1 2.785 0l11.157 11.156a1.97 1.97 0 0 1-1.392 3.363z\\\" />\\n                                    <path\\n                                        d=\\\"M31.5 36.791a1.97 1.97 0 0 1-1.969-1.969V2.01a1.97 1.97 0 0 1 3.938 0v32.812a1.97 1.97 0 0 1-1.969 1.969z\\\" />\\n                                    <path\\n                                        d=\\\"M55.781 63.041H7.22A7.225 7.225 0 0 1 0 55.822V41.385a4.599 4.599 0 0 1 4.594-4.594h7.234a4.567 4.567 0 0 1 4.402 3.276l2.814 9.382a.658.658 0 0 0 .628.467h23.656a.658.658 0 0 0 .628-.467l2.814-9.385a4.572 4.572 0 0 1 4.402-3.273h7.234A4.599 4.599 0 0 1 63 41.385v14.437a7.225 7.225 0 0 1-7.219 7.219zM4.594 40.729a.656.656 0 0 0-.657.656v14.437a3.286 3.286 0 0 0 3.282 3.282H55.78a3.286 3.286 0 0 0 3.282-3.282V41.385a.656.656 0 0 0-.657-.656h-7.234a.65.65 0 0 0-.628.467L47.73 50.58a4.628 4.628 0 0 1-4.402 3.274H19.672a4.567 4.567 0 0 1-4.402-3.276l-2.814-9.382a.65.65 0 0 0-.628-.467H4.594z\\\" />\\n                                </g>\\n                            </svg>\\n\\n                            <h3>Drag and drop file here</h3>\\n                            <h3>or</h3>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary mt-4 mb-4\\\" (click)=\\\"itemImage.click()\\\">Upload images</button>\\n                        </div>\\n                        <div class=\\\"row justify-content-center\\\">\\n                            <div class=\\\"column imgDisplay\\\" *ngFor=\\\"let img of imgURL\\\">\\n                                <img [src]=\\\"img\\\" alt=\\\"Image\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                            </div>\\n                            <input class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" type=\\\"text\\\" [(ngModel)]=\\\"data.title\\\" required>\\n                        </div>\\n                        <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                            </div>\\n                            <input class=\\\"form-control\\\" name=\\\"desc\\\" placeholder=\\\"Description\\\" type=\\\"text\\\" [(ngModel)]=\\\"data.description\\\" required>\\n                        </div>\\n                        <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                            </div>\\n                            <input class=\\\"form-control\\\" name=\\\"bid\\\" placeholder=\\\"Min. bid\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.minBid\\\" required>\\n                        </div>\\n                        <div class=\\\"text-center\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-danger mt-4\\\" (click)=\\\"newPostFunction()\\\">Cancle</button>\\n                            <button [disabled]=\\\"posted\\\" type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"post()\\\">Post</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card card-profile shadow mt-50\\\" *ngIf=\\\"noPosts\\\">\\n                <div class=\\\"px-4\\\">\\n                    <div class=\\\"text-center pt-3 pb-3\\\">\\n                        No posts\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card card-lift--hover shadow mt-50\\\" *ngFor=\\\"let post of userPosts\\\">\\n                <div class=\\\"px-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"column\\\">\\n                            <ngb-carousel>\\n                                <ng-template ngbSlide *ngFor=\\\"let img of post.images\\\">\\n                                    <img [src]=\\\"getImage(img.pic)\\\" alt=\\\"Image\\\" height=\\\"150px\\\" width=\\\"150px\\\">\\n                                </ng-template>\\n                            </ngb-carousel>\\n                        </div>\\n                        <div class=\\\"column postValue\\\">\\n                            <div class=\\\"row\\\">\\n                                <h2>{{post.title}}</h2>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <h5>{{post.description}}</h5>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</main>\"","export default \"<main class=\\\"profile-page\\\">\\n    <section class=\\\"section-profile-cover section-shaped my-0\\\">\\n        <!-- Circles background -->\\n        <div class=\\\"shape shape-style-1 shape-primary alpha-4\\\">\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n        </div>\\n        <!-- SVG separator -->\\n        <div class=\\\"separator separator-bottom separator-skew\\\">\\n            <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n      </svg>\\n        </div>\\n    </section>\\n    <section class=\\\"section\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"card card-profile shadow mt--300\\\">\\n                <div class=\\\"px-4\\\">\\n                    <div class=\\\"text-center mt--5 myForm\\\">\\n                        <form name=\\\"form\\\" role=\\\"form\\\">\\n                            <div class=\\\"row form-group justify-content-center\\\">\\n                                <div class=\\\"col-lg-3 order-lg-2\\\">\\n                                    <div class=\\\"card-profile-image\\\">\\n                                        <input class=\\\"form-control\\\" type=\\\"file\\\" accept=\\\".png, .jpg, .jpeg\\\" #profile hidden (change)=\\\"onFileChange($event)\\\">\\n                                        <img [src]=\\\"imgURL\\\" onerror=\\\"this.src = 'assets/img/profile.png';\\\" class=\\\"rounded-circle myImg\\\" (click)=\\\"profile.click()\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <br><br><br><br><br><br><br>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                                    </div>\\n                                    <input class=\\\"form-control\\\" name=\\\"fName\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.firstName\\\" required>\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                                    </div>\\n                                    <input class=\\\"form-control\\\" name=\\\"lName\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.lastName\\\" required/>\\n\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-pin-3\\\"></i></span>\\n                                    </div>\\n                                    <input class=\\\"form-control\\\" name=\\\"country\\\" placeholder=\\\"Country\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.country\\\" required/>\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-mobile-button\\\"></i></span>\\n                                    </div>\\n                                    <input class=\\\"form-control\\\" name=\\\"number\\\" placeholder=\\\"Number\\\" type=\\\"phone\\\" [(ngModel)]=\\\"user.phone\\\" required/>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"text-center\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"updateProfile()\\\">Update</button>\\n                            </div>\\n                        </form>\\n                        <br>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</main>\"","export default \"<main>\\n    <section class=\\\"section section-shaped section-lg\\\">\\n        <div class=\\\"shape shape-style-1 bg-gradient-default\\\">\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n        </div>\\n        <div class=\\\"container pt-lg-md\\\">\\n            <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-lg-5\\\">\\n                    <div class=\\\"card bg-secondary shadow border-0\\\">\\n                        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                            <div class=\\\"input-group input-group-alternative\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                                </div>\\n                                <input #pass=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"pass\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}\\\" title=\\\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 and not more than 15 characters\\\"\\n                                    required/>\\n                            </div>\\n                            <div *ngIf=\\\"pass.invalid && (pass.dirty || pass.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"pass.errors.required\\\">\\n                                    Password is required.\\n                                </div>\\n                                <div *ngIf=\\\"pass.errors.pattern\\\">\\n                                    Min 1 number, min 1 uppercase and lowercase letter, min 8 and max 15 characters.\\n                                </div>\\n                            </div>\\n                            <br>\\n                            <div class=\\\"input-group input-group-alternative\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                                </div>\\n                                <input #passRe=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"passRe\\\" placeholder=\\\"Re-Type Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"Re_password\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}\\\" title=\\\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 and not more than 15 characters\\\"\\n                                    required/>\\n                            </div>\\n                            <div *ngIf=\\\"passRe.invalid && (passRe.dirty || passRe.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                <div *ngIf=\\\"passRe.errors.required\\\">\\n                                    Re-Type Password is required.\\n                                </div>\\n                                <div *ngIf=\\\"passRe.errors.pattern\\\">\\n                                    Min 1 number, min 1 uppercase and lowercase letter, min 8 and max 15 characters.\\n                                </div>\\n                            </div>\\n                            <div class=\\\"text-danger font-italic\\\">\\n                                <span class=\\\"text-danger font-weight-700\\\">{{passwordError}}</span>\\n                            </div>\\n                            <div class=\\\"text-center\\\" *ngIf=\\\"pass.valid && passRe.valid\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</main>\"","export default \"<main>\\n    <div class=\\\"position-relative\\\">\\n        <!-- shape Hero -->\\n        <section class=\\\"section section-lg section-shaped pb-250\\\">\\n            <div class=\\\"shape shape-style-1 shape-default\\\">\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n            </div>\\n            <div class=\\\"container py-lg-md d-flex\\\">\\n                <div class=\\\"col px-0\\\">\\n                    <ul class=\\\"card list-group\\\">\\n                        <li *ngFor=\\\"let post of userPosts\\\" class=\\\"list-group-item\\\">\\n                            <a (click)=\\\"openPopUp(post)\\\" href=\\\"javascript:void(0)\\\">{{post.title}}</a>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <!-- SVG separator -->\\n            <div class=\\\"separator separator-bottom separator-skew\\\">\\n                <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n        </svg>\\n            </div>\\n        </section>\\n        <!-- 1st Hero Variation -->\\n    </div>\\n</main>\"","export default \"<footer class=\\\"footer\\\" [ngClass]=\\\"{'has-cards': getPath()!=='/user-profile' && getPath()!=='/register' && getPath()!=='/login'}\\\">\\n    <div class=\\\"container\\\">\\n        <hr>\\n        <div class=\\\"row align-items-center justify-content-md-between\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"copyright\\\">\\n                    &copy; {{test | date: 'yyyy'}}\\n                    <a href=\\\"https://www.creative-tim.com?ref=adsa-footer\\\" target=\\\"_blank\\\">Creative Tim</a>.\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <ul class=\\\"nav nav-footer justify-content-end\\\">\\n                    <li class=\\\"nav-item\\\">\\n                        <a [routerLink]=\\\"['/support']\\\">Support Us</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a href=\\\"https://github.com/creativetimofficial/argon-design-system-angular/blob/master/LICENSE.md\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">MIT License</a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</footer>\"","export default \"<nav id=\\\"navbar-main\\\" class=\\\"navbar navbar-main navbar-expand-lg navbar-transparent navbar-light headroom headroom--top headroom--pinned\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand mr-lg-5\\\" [routerLink]=\\\"['']\\\">\\n            <img src=\\\"assets/img/brand/logo.png\\\">\\n        </a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"navbar_global\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbar_global\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\n            <div class=\\\"input-group\\\" *ngIf=\\\"authApi.isLoggedIn()\\\">\\n                <input type=\\\"text\\\" placeholder=\\\" Search...\\\" name=\\\"search\\\" #search matInput [matAutocomplete]=\\\"auto\\\" (input)=\\\"filterTitleValue(search.value)\\\">\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                    <mat-option *ngFor=\\\"let title of filteredTitle\\\" [value]=\\\"title\\\">\\n                        {{title}}\\n                    </mat-option>\\n                </mat-autocomplete>\\n                <button class=\\\"btn btn-icon btn-2 btn-primary\\\" type=\\\"button\\\" (click)=\\\"searchButton(search.value)\\\">\\n                    <span class=\\\"btn-inner--icon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                </button>\\n            </div>\\n            <ul class=\\\"navbar-nav align-items-lg-center ml-lg-auto\\\" *ngIf=\\\"authApi.isLoggedIn()\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link nav-link-icon\\\" data-toggle=\\\"tooltip\\\" title=\\\"Home\\\" [routerLink]=\\\"['']\\\">\\n                        <i class=\\\"fa fa-home\\\"></i>\\n                        <span class=\\\"nav-link-inner--text d-lg-none\\\">Home</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link nav-link-icon\\\" data-toggle=\\\"tooltip\\\" title=\\\"Wishlist\\\" [routerLink]=\\\"['/favorites']\\\">\\n                        <i class=\\\"fa fa-heart\\\"></i>\\n                        <span class=\\\"nav-link-inner--text d-lg-none\\\">Wishlist</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link nav-link-icon\\\" data-toggle=\\\"tooltip\\\" title=\\\"History\\\">\\n                        <i class=\\\"fa fa-history\\\"></i>\\n                        <span class=\\\"nav-link-inner--text d-lg-none\\\">History</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link nav-link-icon\\\" data-toggle=\\\"tooltip\\\" title=\\\"Order Cart\\\">\\n                        <i class=\\\"fa fa-shopping-cart\\\"></i>\\n                        <span class=\\\"nav-link-inner--text d-lg-none\\\">Cart</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link nav-link-icon\\\" data-toggle=\\\"tooltip\\\" title=\\\"Posts\\\" [routerLink]=\\\"['/posts']\\\">\\n                        <i class=\\\"fa fa-edit\\\"></i>\\n                        <span class=\\\"nav-link-inner--text d-lg-none\\\">My Posts</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link nav-link-icon\\\" data-toggle=\\\"tooltip\\\" title=\\\"Profile\\\" [routerLink]=\\\"['/profile']\\\">\\n                        <i class=\\\"fa fa-user\\\"></i>\\n                        <span class=\\\"nav-link-inner--text d-lg-none\\\">Profile</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <div class=\\\"text-center\\\">\\n                        <button type=\\\"submit\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-outline-danger btn-sm\\\">\\n                            <i class=\\\"fa fa-sign-out\\\"></i>\\n                        </button>\\n                    </div>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\"","export default \"<main>\\n    <section class=\\\"section section-shaped section-lg\\\">\\n        <div class=\\\"shape shape-style-1 bg-gradient-default\\\">\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n        </div>\\n        <div class=\\\"container pt-lg-md\\\">\\n            <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-lg-5\\\">\\n                    <div class=\\\"card bg-secondary shadow border-0\\\">\\n                        <div class=\\\"card-header bg-white pb-5\\\">\\n                            <div class=\\\"text-muted text-center mb-3\\\">\\n                                <small>Sign up with</small>\\n                            </div>\\n                            <div class=\\\"text-center\\\">\\n                                <a (click)=\\\"signupGoogle()\\\" class=\\\"btn btn-neutral btn-icon\\\">\\n                                    <span class=\\\"btn-inner--icon\\\"><img src=\\\"./assets/img/icons/common/google.svg\\\"></span>\\n                                    <span class=\\\"btn-inner--text\\\">Google</span>\\n                                </a>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n                            <div class=\\\"text-center text-muted mb-4\\\">\\n                                <small>Or sign up with credentials</small>\\n                            </div>\\n                            <form role=\\\"form\\\" ngNativeValidate>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                                        </div>\\n                                        <input #fName=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"fName\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" (focus)=\\\"focus=true\\\" (blur)=\\\"focus=false\\\" [(ngModel)]=\\\"user.firstName\\\" required>\\n                                    </div>\\n                                    <div *ngIf=\\\"fName.invalid && (fName.dirty || fName.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div *ngIf=\\\"fName.errors.required\\\">\\n                                            Firstname is required.\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus1===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                                        </div>\\n                                        <input #lName=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"lName\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" (focus)=\\\"focus1=true\\\" (blur)=\\\"focus1=false\\\" [(ngModel)]=\\\"user.lastName\\\" required/>\\n                                    </div>\\n                                    <div *ngIf=\\\"lName.invalid && (lName.dirty || lName.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div *ngIf=\\\"lName.errors.required\\\">\\n                                            LastName is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus2===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                                        </div>\\n                                        <input #email=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" (focus)=\\\"focus2=true\\\" (blur)=\\\"focus2=false\\\" [(ngModel)]=\\\"user.userName\\\" required/>\\n                                    </div>\\n                                    <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div *ngIf=\\\"email.errors.required\\\">\\n                                            Email is required.\\n                                        </div>\\n                                        <div *ngIf=\\\"email.errors.pattern\\\">\\n                                            Email is invalid.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus3===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                                        </div>\\n                                        <input #pass=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"pass\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" (focus)=\\\"focus3=true\\\" (blur)=\\\"focus3=false\\\" [(ngModel)]=\\\"password\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}\\\" title=\\\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 and not more than 15 characters\\\"\\n                                            required/>\\n                                    </div>\\n                                    <div *ngIf=\\\"pass.invalid && (pass.dirty || pass.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div *ngIf=\\\"pass.errors.required\\\">\\n                                            Password is required.\\n                                        </div>\\n                                        <div *ngIf=\\\"pass.errors.pattern\\\">\\n                                            Min 1 number, min 1 uppercase and lowercase letter, min 8 and max 15 characters.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus4===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                                        </div>\\n                                        <input #passRe=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"passRe\\\" placeholder=\\\"Re-Type Password\\\" type=\\\"password\\\" (focus)=\\\"focus4=true\\\" (blur)=\\\"focus4=false\\\" [(ngModel)]=\\\"Re_password\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}\\\" title=\\\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 and not more than 15 characters\\\"\\n                                            required/>\\n                                    </div>\\n                                    <div *ngIf=\\\"passRe.invalid && (passRe.dirty || passRe.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div *ngIf=\\\"passRe.errors.required\\\">\\n                                            Re-Type Password is required.\\n                                        </div>\\n                                        <div *ngIf=\\\"passRe.errors.pattern\\\">\\n                                            Min 1 number, min 1 uppercase and lowercase letter, min 8 and max 15 characters.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus5===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-settings-gear-65\\\"></i>{{placeholder}}</span>\\n                                        </div>\\n                                        <select #secQtn=\\\"ngModel\\\" id=\\\"qtn\\\" name=\\\"secQtn\\\" class=\\\"form-control\\\" (click)=\\\"focus5=!focus5\\\" [(ngModel)]=\\\"user.securityQuestion\\\" required (change)=\\\"onChange()\\\">\\n                                            <option *ngFor=\\\"let qtn of allQtns\\\" [ngValue]=\\\"qtn\\\">{{ qtn.question }}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{'focused':focus6===true}\\\">\\n                                    <div class=\\\"input-group input-group-alternative\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-edit\\\"></i></span>\\n                                        </div>\\n                                        <input #ans=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"ans\\\" placeholder=\\\"Answer\\\" type=\\\"text\\\" (focus)=\\\"focus6=true\\\" (blur)=\\\"focus6=false\\\" [(ngModel)]=\\\"user.answer\\\" required/>\\n                                    </div>\\n                                    <div *ngIf=\\\"ans.invalid && (ans.dirty || ans.touched)\\\" class=\\\"alert alert-danger\\\">\\n                                        <div *ngIf=\\\"ans.errors.required\\\">\\n                                            Answer is required.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"text-danger font-italic\\\">\\n                                    <span class=\\\"text-danger font-weight-700\\\">{{passwordError}}</span>\\n                                </div>\\n                                <div class=\\\"row my-4\\\">\\n                                    <div class=\\\"col-12\\\">\\n                                        <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                                            <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\" required />\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\n                        <span>I agree with the\\n                          <a href=\\\"javascript:void(0)\\\">Privacy Policy</a>\\n                        </span>\\n                      </label>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"fName.valid && lName.valid && email.valid && pass.valid && passRe.valid && ans.valid\\\">\\n                                    <div class=\\\"text-center\\\">\\n                                        <button [disabled]=\\\"created\\\" type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"signup()\\\">Create account</button>\\n                                    </div>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</main>\"","export default \"<main>\\n    <div class=\\\"position-relative\\\">\\n        <!-- shape Hero -->\\n        <section class=\\\"section section-lg section-shaped pb-250\\\">\\n            <div class=\\\"shape shape-style-1 shape-default\\\">\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n                <span></span>\\n            </div>\\n            <div class=\\\"py-lg-md\\\" style=\\\"text-align: center; padding-left: 50px;\\\">\\n                <p style=\\\"color: white; font-size: large; font-weight: bold;\\\">Support us with your love so we can keep improving for you!</p>\\n                <input type=\\\"number\\\" min=\\\"1\\\" max=\\\"10000\\\" [(ngModel)]=\\\"price\\\"><br><br>\\n                <ngx-paypal [config]=\\\"payPalConfig\\\"></ngx-paypal>\\n            </div>\\n            <!-- SVG separator -->\\n            <div class=\\\"separator separator-bottom separator-skew\\\">\\n                <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n          <polygon class=\\\"fill-white\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n        </svg>\\n            </div>\\n        </section>\\n        <!-- 1st Hero Variation -->\\n    </div>\\n</main>\"","export default \"<main>\\r\\n    <section class=\\\"section section-shaped section-lg\\\">\\r\\n        <div class=\\\"shape shape-style-1 bg-gradient-default\\\">\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n            <span></span>\\r\\n        </div>\\r\\n        <div class=\\\"container pt-lg-md\\\">\\r\\n            <div class=\\\"row justify-content-center\\\">\\r\\n                <div class=\\\"col-lg-5\\\">\\r\\n                    <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n                        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4\\\" (click)=\\\"register()\\\">Verify account</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n</main>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Renderer2, Inject, HostListener, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { DOCUMENT, Location } from '@angular/common';\n\nvar didScroll;\nvar lastScrollTop = 0;\nvar delta = 3;\nvar navbarHeight = 0;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    private _router: Subscription;\n\n    constructor( private renderer : Renderer2, \n                private router: Router, \n                @Inject(DOCUMENT,) \n                private document: any, \n                private element : ElementRef, \n                public location: Location) {}\n\n    @HostListener('window:scroll', ['$event'])\n    hasScrolled() {\n\n        var st = window.pageYOffset;\n        // Make sure they scroll more than delta\n        if(Math.abs(lastScrollTop - st) <= delta)\n            return;\n        var navbar = document.getElementsByTagName('nav')[0];\n        if (st < lastScrollTop && st < navbarHeight){\n            \n            if(st + window.innerHeight < document.body.scrollHeight) {\n                if (navbar.classList.contains('headroom--unpinned')) {\n                    navbar.classList.remove('headroom--unpinned');\n                    navbar.classList.add('headroom--pinned');\n                }\n            }\n        }\n\n        lastScrollTop = st;\n    };\n    ngOnInit() {\n      var navbar : HTMLElement = this.element.nativeElement.children[0].children[0];\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\n          if (window.outerWidth > 991) {\n              window.document.children[0].scrollTop = 0;\n          }else{\n              window.document.activeElement.scrollTop = 0;\n          }\n          this.renderer.listen('window', 'scroll', (event) => {\n              const number = window.scrollY;\n              if (number > 150 || window.pageYOffset > 150) {\n                  // add logic\n                  navbar.classList.add('headroom--not-top');\n              } else {\n                  // remove logic\n                  navbar.classList.remove('headroom--not-top');\n              }\n          });\n      });\n      this.hasScrolled();\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app.routing';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\n\nimport { HomeModule } from './home/home.module';\nimport { LoginComponent } from './login/login.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ConstantsService } from './shared/constants.service';\nimport { RegisterConfirmComponent } from './verification/registrationConfirm.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { DndDirective } from './posts/dnd.directive';\nimport { SocialLoginModule, AuthServiceConfig, GoogleLoginProvider } from 'angularx-social-login';\nimport { FavoriteComponent } from './favorite/favorite.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { SearchComponent } from './search/search.component';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { PopupComponent } from './search/popup.component';\nimport { SupportComponent } from './support/support.component';\nimport { NgxPayPalModule } from 'ngx-paypal';\nimport { RecaptchaModule } from 'ng-recaptcha';\n\nconst config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"827977904723-fvcasgi8cie24p610ep2bcco1nhk0i67.apps.googleusercontent.com\")\n  }\n]);\n\nexport function provideConfig() {\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LandingComponent,\n    ProfileComponent,\n    NavbarComponent,\n    FooterComponent,\n    LoginComponent,\n    RegisterConfirmComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    PostsComponent, \n    DndDirective,\n    FavoriteComponent,\n    SearchComponent,\n    PopupComponent,\n    SupportComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    FormsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HomeModule,\n    SocialLoginModule,\n    NoopAnimationsModule,\n    MatAutocompleteModule,\n    MatDialogModule,\n    NgxPayPalModule,\n    RecaptchaModule\n  ],\n  providers: [ CookieService, ConstantsService, NavbarComponent,\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents:[PopupComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, } from '@angular/common';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterConfirmComponent } from './verification/registrationConfirm.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { FavoriteComponent } from './favorite/favorite.component';\nimport { SearchComponent } from './search/search.component';\nimport { SupportComponent } from './support/support.component';\n\nconst routes: Routes =[\n    {\n      path: '',\n      component: HomeComponent\n    },\n    { path: 'login',\n      component: LoginComponent \n    },\n    { path: 'register',\n      component: SignupComponent,\n    },\n    { path: 'register/regitrationConfirm/:token',\n      component: RegisterConfirmComponent\n    },\n    { path: 'profile',\n      component: ProfileComponent\n    },\n    { path: 'landing',\n      component: LandingComponent\n    },\n    { path: 'forgotPassword',\n      component: ForgotPasswordComponent\n    },\n    { path: 'forgotPassword/reset/:token',\n      component: ResetPasswordComponent\n    },\n    { path: 'posts',\n      component: PostsComponent\n    },\n    {\n      path: 'favorites',\n      component: FavoriteComponent\n    },\n    {\n      path: 'search/:token',\n      component: SearchComponent\n    },\n    {\n      path: 'support',\n      component: SupportComponent\n    },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    RouterModule.forRoot(routes,{useHash: true})\n  ],\n  exports: [ RouterModule\n  ],\n})\nexport class AppRoutingModule { }","export default \".column {\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n.postValue {\\r\\n    width: 680px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmF2b3JpdGUvZmF2b3JpdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvZmF2b3JpdGUvZmF2b3JpdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb2x1bW4ge1xyXG4gICAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLnBvc3RWYWx1ZSB7XHJcbiAgICB3aWR0aDogNjgwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../shared/rest-api.service';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-favorite',\n  templateUrl: './favorite.component.html',\n  styleUrls: ['./favorite.component.css']\n})\nexport class FavoriteComponent implements OnInit {\n\n  userPosts;\n  noPosts;\n  bidAmt;\n\n  constructor(private apiService : RestApiService,\n    private config: NgbCarouselConfig,\n    private authApi: AuthServiceAPI,\n    private router: Router) {\n      config.interval = 3000;\n      config.pauseOnHover = true;\n     }\n\n  ngOnInit(): void {\n    if(!this.authApi.isLoggedIn()){\n      this.router.navigateByUrl('/');\n    }\n    this.apiService.getFavorite().subscribe((data) => {\n      if(data.length>0) {\n        this.noPosts = false;\n        this.userPosts = data;\n        this.userPosts.forEach(post => {\n          post.selected = true;\n        });\n        console.log(this.userPosts);\n      }\n      else {\n        console.log(this.noPosts)\n        this.noPosts=true;\n      }\n    })\n  }\n\n  getImage(img){\n    return 'data:image/png;base64,'+ img;\n  }\n\n  toggleSelected(postData){\n    console.log(postData);\n    if(postData.selected==false){\n      this.apiService.addFavorite(postData).subscribe((data)=>{\n        if(data==true){ \n          postData.selected = true;\n        }\n        console.log(data);\n      })\n    } else {\n      this.apiService.removeFavorite(postData).subscribe((data)=>{\n        if(data==true){ \n          postData.selected = false;\n          window.location.reload();\n        }\n        console.log(data);\n      })\n    }\n    \n  }\n\n  bidPost(post){\n    if(post.minBid>post.bidAmt){\n      alert(\"The min bid is \"+post.minBid);\n    } else {\n      this.apiService.bidPost(post.id, post.bidAmt).subscribe((data)=>{\n        alert(\"Success\");\n        window.location.reload();\n        console.log(data);\n      })\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceAPI } from '../shared/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  security = false;\n  isNull = false;\n  securityQuestion : string;\n  wrongAnswer = false;\n  answer: string;\n  userName : string;\n  submitted = false;\n\n  constructor(private authApi : AuthServiceAPI) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if(this.userName == null){\n      this.isNull = true;\n    } else {\n      this.authApi.getQuestion(this.userName).subscribe((data)=>{\n        console.log(data);\n        this.submitted = false;\n        this.securityQuestion = data.question;\n        this.security = true;\n      })\n    }\n  }\n\n  checkAnswer(){\n    this.wrongAnswer = false;\n    if(this.userName == null){\n      this.isNull = true;\n    } else {\n      this.submitted = true;\n      var data = new FormData();\n      data.append(\"userName\",this.userName);\n      data.append(\"answer\",this.answer);\n      this.authApi.checkAnswer(data).subscribe((res)=>{\n        if(res==false){\n          this.wrongAnswer = true;\n          this.submitted = false;\n        } else {\n          alert(\"Email has been sent\");\n          window.location.reload();\n        }\n      })\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n    model = {\n        left: true,\n        middle: false,\n        right: false\n    };\n\n    focus;\n    focus1;\n    constructor(private authApi: AuthServiceAPI,\n        private router: Router) { }\n\n    ngOnInit() {\n        if(this.authApi.isLoggedIn()) {\n            this.router.navigateByUrl('/landing');\n        }\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        FormsModule,\n        RouterModule\n    ],\n    declarations: [ HomeComponent ],\n    exports:[ HomeComponent ],\n    providers: []\n})\nexport class HomeModule { }\n","export default \".column {\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n.postValue {\\r\\n    width: 680px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGFuZGluZy9sYW5kaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbHVtbiB7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4ucG9zdFZhbHVlIHtcclxuICAgIHdpZHRoOiA2ODBweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../shared/rest-api.service';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-landing',\n    templateUrl: './landing.component.html',\n    styleUrls: ['./landing.component.css']\n})\n\nexport class LandingComponent implements OnInit {\n  focus: any;\n  focus1: any;\n  userPosts;\n  noPosts;\n  bidAmt;\n  \n  constructor(private apiService : RestApiService,\n    private config: NgbCarouselConfig,\n    private authApi: AuthServiceAPI,\n    private router: Router) { \n      config.interval = 3000;\n      config.pauseOnHover = true;\n    }\n\n  ngOnInit() {\n    if(!this.authApi.isLoggedIn()){\n      this.router.navigateByUrl('/');\n    }\n    this.apiService.getPosts().subscribe((data) => {\n      if(data.length>0) {\n        this.noPosts = false;\n        this.userPosts = data;\n        this.userPosts.forEach(post => {\n          post.selected = false;\n        });\n        console.log(this.userPosts);\n      }\n      else {\n        console.log(this.noPosts)\n        this.noPosts=true;\n      }\n    })\n  }\n\n  getImage(img){\n    return 'data:image/png;base64,'+ img;\n  }\n\n  toggleSelected(postData){\n    console.log(postData);\n    if(postData.selected==false){\n      this.apiService.addFavorite(postData).subscribe((data)=>{\n        if(data==true){ \n          postData.selected = true;\n        }\n        console.log(data);\n      })\n    } else {\n      this.apiService.removeFavorite(postData).subscribe((data)=>{\n        if(data==true){ \n          postData.selected = false;\n        }\n        console.log(data);\n      })\n    }\n    \n  }\n\n  bidPost(post){\n    if(post.minBid>post.bidAmt){\n      alert(\"The min bid is \"+post.minBid);\n    } else {\n      this.apiService.bidPost(post.id, post.bidAmt).subscribe((data)=>{\n        alert(\"Success\");\n        window.location.reload();\n        console.log(data);\n      })\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { EncryptService } from '../shared/encode.service';\nimport { NavbarComponent } from '../shared/navbar/navbar.component';\nimport { AuthService, GoogleLoginProvider } from 'angularx-social-login';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  focus;\n  focus1;\n  rememberMe: boolean;\n  recaptchaVerified = false;\n  \n  @Input()\n  password: ''\n  userName: ''\n\n  constructor(private router: Router,\n              private authApi: AuthServiceAPI,\n              private authService: AuthService,) { }\n\n  ngOnInit() {\n  }\n\n  resolved(captchaResponse: string) {\n    console.log(`Resolved captcha with response: ${captchaResponse}`);\n    this.recaptchaVerified = true;\n}\n\n  login() {\n    if (!this.recaptchaVerified) {\n      alert(\"Please verify reCaptcha!\");\n      window.location.reload();\n    } else {\n    this.authApi.login(this.userName, this.password).subscribe((data) => {\n      if (this.authApi.isLoggedIn()) {\n        if(this.rememberMe) {\n          this.authApi.rememberUser(this.userName);\n        }\n        console.log(this.authApi.getUpdated());\n        if(this.authApi.getUpdated()){\n          this.router.navigateByUrl('/landing');\n        } else {\n          alert(\"Update your profile.\");\n          this.router.navigateByUrl('/profile');\n        }\n       } else {\n         alert(\"Password is incorrect\");\n       }\n     }\n   );\n  }\n  }\n\n  googleLogin() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(userData => {\n      this.authApi.loginSocial(userData.email).subscribe((data) => {\n        if (this.authApi.isLoggedIn()) {\n          if(this.authApi.getUpdated()){\n            this.router.navigateByUrl('/landing');\n          } else {\n            alert(\"Update your profile.\");\n            this.router.navigateByUrl('/profile');\n          }\n        }\n      })\n    });\n  }\n\n}\n","import {\r\n    Directive,\r\n    Output,\r\n    Input,\r\n    EventEmitter,\r\n    HostBinding,\r\n    HostListener\r\n  } from '@angular/core';\r\n  \r\n  @Directive({\r\n    selector: '[appDnd]'\r\n  })\r\n  export class DndDirective {\r\n    @HostBinding('class.fileover') fileOver: boolean;\r\n    @Output() fileDropped = new EventEmitter<any>();\r\n  \r\n    // Dragover listener\r\n    @HostListener('dragover', ['$event']) onDragOver(evt) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      this.fileOver = true;\r\n    }\r\n  \r\n    // Dragleave listener\r\n    @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      this.fileOver = false;\r\n    }\r\n  \r\n    // Drop listener\r\n    @HostListener('drop', ['$event']) public ondrop(evt) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      this.fileOver = false;\r\n      let files = evt.dataTransfer.files;\r\n      if (files.length > 0) {\r\n        this.fileDropped.emit(files);\r\n      }\r\n    }\r\n  }\r\n  ","export default \".fileContainer {\\r\\n    width: 450px;\\r\\n    height: 300px;\\r\\n    padding: 2rem;\\r\\n    text-align: center;\\r\\n    border: dashed 1px #979797;\\r\\n    position: relative;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n    font-size: 20px;\\r\\n    font-weight: 600;\\r\\n    color: #38424c;\\r\\n}\\r\\n\\r\\n.images {\\r\\n    margin-left: 150px;\\r\\n}\\r\\n\\r\\n.imgDisplay {\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.column {\\r\\n    padding: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUIsa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmlsZUNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogNDUwcHg7XHJcbiAgICBoZWlnaHQ6IDMwMHB4O1xyXG4gICAgcGFkZGluZzogMnJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogZGFzaGVkIDFweCAjOTc5Nzk3O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBjb2xvcjogIzM4NDI0YztcclxufVxyXG5cclxuLmltYWdlcyB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTUwcHg7XHJcbn1cclxuXHJcbi5pbWdEaXNwbGF5IHtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5jb2x1bW4ge1xyXG4gICAgcGFkZGluZzogMjBweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CompressorService } from '../shared/compressor.service';\nimport { map, expand } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { RestApiService } from '../shared/rest-api.service';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  noPosts;\n  newPost = false;\n  posted = false;\n  maxFiles = '';\n  files = [];\n  imgURL = [];\n  data = {title: '', description: '', minBid: 0}\n  uploadData = new FormData();\n  reader = new FileReader();\n  userPosts;\n\n  constructor(private resizer: CompressorService,\n              private apiService : RestApiService,\n              private config: NgbCarouselConfig,\n              private authApi: AuthServiceAPI,\n              private router: Router) { \n                config.interval = 3000;\n                config.pauseOnHover = true;\n              }\n\n  ngOnInit(): void {\n    if(!this.authApi.isLoggedIn()){\n      this.router.navigateByUrl('/');\n    }\n    this.apiService.getPostForUser().subscribe((data) => {\n      if(data.length>0) {\n        this.noPosts = false;\n        console.log(data);\n        this.userPosts = data;\n      } else {\n        this.noPosts = true;\n      }\n    })\n  }\n\n  recursiveCompress = (image: File, index, array) => {\n    return this.resizer.compress(image).pipe (\n      map(response => {\n        console.log('compressed ' + index + image.name);\n        this.reader.readAsDataURL(response);\n        this.uploadData.append(\"files\", response);\n        this.files.push(response);\n        this.reader.onload = ev => {\n          this.imgURL.push(this.reader.result);\n        }\n        return {\n          data: response,\n          index: index + 1,\n          array: array,\n        };\n      }),\n    );\n  }\n\n  onFileDropped($event) {\n    console.log($event)\n    this.prepareFilesList($event);\n  }\n\n  prepareFilesList(files: Array<any>) {\n    if(this.files.length < 3 && files.length + this.files.length <=3 ){\n      const compress = this.recursiveCompress( files[0], 0, files ).pipe(\n        expand(res => {\n          return res.index > res.array.length - 1\n            ? EMPTY\n            : this.recursiveCompress( files[res.index], res.index, files );\n        }),\n      );\n      compress.subscribe(res => {\n        if (res.index > res.array.length - 1) {\n          console.log(this.imgURL);\n          }\n        });\n      } else {\n      this.maxFiles = 'Maximum 3 files allowed.';\n    }\n    \n  }\n\n  newPostFunction(){\n    this.newPost = !this.newPost;\n  }\n\n  post(){\n    this.posted = true;\n    this.uploadData.append(\"title\", this.data.title);\n    this.uploadData.append(\"description\", this.data.description);\n    this.uploadData.append(\"minBid\", this.data.minBid.toString());\n    this.uploadData.append(\"body\", JSON.stringify(this.data))\n    this.apiService.newPost(this.uploadData).subscribe((data)=>{\n      console.log(data);\n      window.location.reload();\n    })\n  }\n\n  getImage(img){\n    return 'data:image/png;base64,'+ img;\n  }\n}\n","export default \".myForm {\\n  margin: 0px 100px;\\n}\\n\\n.myImg {\\n  height: 200px;\\n  width: 200px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9EOlxcRG9jdW1lbnRzXFxBdXNpZVxcVVFcXFNlbSAxXFxXSVNcXFByb2plY3Qvc3JjXFxhcHBcXHByb2ZpbGVcXHByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15Rm9ybSB7XHJcbiAgICBtYXJnaW46IDBweCAxMDBweDtcclxufVxyXG5cclxuLm15SW1nIHtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbn0iLCIubXlGb3JtIHtcbiAgbWFyZ2luOiAwcHggMTAwcHg7XG59XG5cbi5teUltZyB7XG4gIGhlaWdodDogMjAwcHg7XG4gIHdpZHRoOiAyMDBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\n\nexport class ProfileComponent implements OnInit {\n\n    user = {userName: '', firstName: '', lastName: '', country: null, phone: null, profileImg: {}}\n    imgURL : any;\n    selectedFile;\n\n    constructor(private authApi: AuthServiceAPI,\n        private router: Router) { }\n\n    ngOnInit() {\n        if(!this.authApi.isLoggedIn()){\n            this.router.navigateByUrl('/');\n        } else {\n            this.user.userName = this.authApi.getUser();\n            this.authApi.getUserDetails(this.user.userName).subscribe(data=>{\n                console.log(data);\n                this.user.firstName = data.firstName;\n                this.user.lastName = data.lastName;\n                this.user.country = data.country!=null ? data.country:null;\n                this.user.phone = data.phone!=null ? data.phone:null;\n                if(data.profileImg!=null)\n                    this.imgURL = 'data:image/png;base64,'+ data.profileImg.pic;\n                else if(data.socialImage!=null)\n                    this.imgURL = data.socialImage;\n            })\n        }\n    }\n\n    onFileChange(event){\n        console.log(event);\n        this.selectedFile = event.target.files[0];\n        console.log(this.selectedFile);\n        let reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = (event1)=>{\n            this.imgURL = reader.result;\n        }\n    }\n\n    updateProfile(){\n        \n            const uploadData = new FormData();\n            if(this.selectedFile!=null){\n                uploadData.append(\"profileImg\", this.selectedFile, this.selectedFile.name);\n            } else {\n                uploadData.append(\"profileImg\", null);\n            }\n            uploadData.append(\"userName\", this.user.userName);\n            uploadData.append(\"firstName\", this.user.firstName);\n            uploadData.append(\"lastName\", this.user.lastName);\n            uploadData.append(\"country\", this.user.country);\n            uploadData.append(\"phone\", this.user.phone);\n            console.log(uploadData.get(\"profileImg\"))\n            this.authApi.updateUser(uploadData).subscribe(data=>{\n                console.log(data);\n                alert(\"Profile Updated\");\n                window.location.reload();\n            });\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EncryptService } from '../shared/encode.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  user;\n  passwordError;\n  token;\n  @Input()\n  Re_password;\n  password;\n\n  constructor(private authApi: AuthServiceAPI,\n    private route: ActivatedRoute,\n    private router: Router,\n    public encryption: EncryptService,) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe( (param) => {\n      this.token = param.token;\n      this.authApi.resetPasswordTokenVerify(param.token).subscribe((data) => {\n          this.user = data;\n          console.log(this.user);\n        });\n  });\n  }\n\n  onSubmit(){\n    if(this.password == this.Re_password){\n      var pass = this.encryption.encrypt(this.password);\n      console.log(this.encryption.decrypt(this.user.password));\n      if(this.encryption.decrypt(this.user.password) == this.password){\n        this.passwordError = \"New password cannot be same as old password.\";\n      } else {\n        this.user.password = pass;\n        this.authApi.resetPassword(this.user, this.token).subscribe(res=>{\n          alert(\"Password changed successfully\")\n          this.router.navigateByUrl('/login');\n        })\n      }\n    } else {\n      this.passwordError = \"Password do not match\";\n    }\n  }\n\n}\n","import { Component, Inject } from '@angular/core';  \r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestApiService } from '../shared/rest-api.service';\r\n  \r\n@Component({  \r\n    selector: 'app-popup',  \r\n    template: `  \r\n    <style>\r\n    .column {\r\n        padding: 20px;\r\n        margin-left: 20px;\r\n    }\r\n    .postValue {\r\n        width: 680px;\r\n    }\r\n    </style>\r\n            <div class=\"row justify-content-center\">\r\n                <ngb-carousel>\r\n                    <ng-template ngbSlide *ngFor=\"let img of post.images\">\r\n                        <img [src]=\"getImage(img.pic)\" alt=\"Image\" height=\"150px\" width=\"150px\">\r\n                    </ng-template>\r\n                </ngb-carousel>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"column justify-content-center\">\r\n                    <div class=\"row\"><h2>{{post.title}}</h2></div>\r\n                    <div class=\"row\"><h5>{{post.description}}</h5></div>\r\n                    <div class=\"row\"><h6>Posted by: {{post.user.firstName}} {{post.user.lastName}}</h6></div>\r\n                </div>\r\n                <div class=\"column\">\r\n                    <button type=\"button\" class=\"btn btn-link\" (click)=\"toggleSelected(post)\">\r\n                        <span>\r\n                            <i class=\"fa fa-heart-o\" style=\"color: red; font-size: 24px;\" *ngIf=\"!post.selected\"></i>\r\n                            <i class=\"fa fa-heart\" style=\"color: red; font-size: 24px;\" *ngIf=\"post.selected\"></i>\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <input #bid name=\"bid\" id=\"bid\" type=\"number\" style=\"width: 100px; padding: 8px; margin-bottom: 10px; margin-left: 10px;\" [(ngModel)]=\"bidAmt\" value=\"post.minBid\">\r\n                <button type=\"button\" class=\"btn btn-success\" style=\"margin-left: 20px;\" (click)=\"bidPost(post)\">\r\n                    Bid\r\n                </button>\r\n            </div>\r\n    `  \r\n})  \r\nexport class PopupComponent{  \r\n    bidAmt;\r\n    constructor(@Inject(MAT_DIALOG_DATA) public post:any,\r\n    private apiService : RestApiService){  \r\n        console.log(post);\r\n        post.selected = false;\r\n    }\r\n\r\n    getImage(img){\r\n        return 'data:image/png;base64,'+ img;\r\n    }\r\n\r\n    toggleSelected(postData){\r\n        console.log(postData);\r\n        if(postData.selected==false){\r\n          this.apiService.addFavorite(postData).subscribe((data)=>{\r\n            if(data==true){ \r\n              postData.selected = true;\r\n            }\r\n            console.log(data);\r\n          })\r\n        } else {\r\n          this.apiService.removeFavorite(postData).subscribe((data)=>{\r\n            if(data==true){ \r\n              postData.selected = false;\r\n            }\r\n            console.log(data);\r\n          })\r\n        }\r\n        \r\n      }\r\n\r\n      bidPost(post){\r\n        if(post.minBid>this.bidAmt){\r\n          alert(\"The min bid is \"+post.minBid);\r\n        } else {\r\n          this.apiService.bidPost(post.id, this.bidAmt).subscribe((data)=>{\r\n            alert(\"Success\");\r\n            window.location.reload();\r\n            console.log(data);\r\n          })\r\n        }\r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RestApiService } from '../shared/rest-api.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopupComponent } from './popup.component';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  userPosts;\n  constructor(private route: ActivatedRoute,\n              private restApi: RestApiService,\n              private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe( (param) => {\n      if(param){\n        console.log(param);\n        this.restApi.getSearchResults(param.token).subscribe((data)=>{\n          console.log(data);\n          this.userPosts = data;\n        });\n      }\n    });\n  }\n\n  openPopUp(post){\n    const dialogRef=this.dialog.open(PopupComponent, {\n      data: post\n    });\n  }\n\n}\n","export class Questions {\r\n    id: string;\r\n    shortName: string;\r\n    question: string;\r\n\r\n }","\r\nimport { Injectable, NgModule } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { map, catchError, retry } from 'rxjs/operators';\r\nimport { RememberMeService } from './remember.service';\r\nimport { EncryptService } from './encode.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ConstantsService } from './constants.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginComponent } from '../login/login.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n@NgModule({\r\n  providers: [CookieService]\r\n})\r\nexport class AuthServiceAPI {\r\n\r\n  errorData: {};\r\n  COOKIE_NAME = \"rememberMe\";\r\n  SESSION_NAME = \"currentUser\";\r\n  SECRET_KEY = \"6LflJ_4UAAAAAATeer1Fx6Au2MRDTqQEscJPtINI\";\r\n  UPDATED = false;\r\n  ISSOCIAL = false;\r\n\r\n  constructor(private http: HttpClient,\r\n              private enc: EncryptService,\r\n              private remeberService: RememberMeService,\r\n              private cookie: CookieService,\r\n              private constant: ConstantsService,\r\n              private router: Router) { }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': \"*\"\r\n    })\r\n  }\r\n\r\n  login(uname, pass) {\r\n    return this.http.post<any>(this.constant.baseApiUrl+'/login', uname, this.httpOptions)\r\n    .pipe(map(user => {\r\n      var password = this.enc.decrypt(user.password);\r\n      if (user && pass==password) {\r\n        sessionStorage.setItem(this.SESSION_NAME, JSON.stringify(user.userName));\r\n        if(user.country != null && user.phone != null){\r\n          this.UPDATED = true;\r\n        } else {\r\n          this.router.navigateByUrl('/profile');\r\n        }\r\n      }\r\n    }),\r\n    catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 400) {\r\n        alert(\"User not found.\");\r\n        //this.loginVar.loginError = \"Username is incorrect\";\r\n        return throwError('User not found');\r\n      } else {\r\n        return throwError('backend comm error');\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  loginSocial(uname) {\r\n    return this.http.post<any>(this.constant.baseApiUrl+'/loginSocial', uname, this.httpOptions)\r\n    .pipe(map(user => {\r\n      if (user) {\r\n        sessionStorage.setItem(this.SESSION_NAME, JSON.stringify(user.userName));\r\n        this.ISSOCIAL = true;\r\n        if(user.country != null && user.phone != null){\r\n          this.UPDATED = true;\r\n        } else {\r\n          this.router.navigateByUrl('/profile');\r\n        }\r\n      }\r\n    }),\r\n    catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 400) {\r\n        alert(\"User not found.\");\r\n        return throwError('User not found');\r\n      } else {\r\n        return throwError('backend comm error');\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  isLoggedIn() {\r\n    if (sessionStorage.getItem(this.SESSION_NAME) || this.loginRememberedUser()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  logout() {\r\n    if(this.cookie.check(this.COOKIE_NAME)) {\r\n      var id = this.cookie.get(this.COOKIE_NAME);\r\n      this.remeberService.deleteRememberedUser(id);\r\n      this.deleteRememberMeCookie();\r\n    }\r\n    sessionStorage.removeItem(this.SESSION_NAME);\r\n  }\r\n\r\n  rememberUser(username:string){\r\n    var id = this.remeberService.rememberUser(username);\r\n    this.cookie.set(this.COOKIE_NAME, id, 60 * 60 * 24 * 30, \"/\");\r\n  }\r\n\r\n  loginRememberedUser(): boolean{\r\n    if(this.cookie.check(this.COOKIE_NAME)) {\r\n      var id = this.cookie.get(this.COOKIE_NAME);\r\n      var username = this.remeberService.getRememberedUser(id);\r\n      if(username!=null) {\r\n        sessionStorage.setItem(this.SESSION_NAME, JSON.stringify(username));\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deleteRememberMeCookie() {\r\n    this.cookie.delete(this.COOKIE_NAME, \"/\");\r\n  }\r\n\r\n  createUser(user) {\r\n    console.log(this.constant.baseApiUrl);\r\n    return this.http.post<any>(this.constant.baseApiUrl + '/register', JSON.stringify(user), this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 400) {\r\n          alert(\"User already exists!\");\r\n          window.location.reload();\r\n          return throwError('User Exists');\r\n        } else {\r\n          return throwError('backend comm error');\r\n        }\r\n      })\r\n    )\r\n  }  \r\n\r\n  confirmUser(token) {\r\n    return this.http.get<any>(this.constant.baseApiUrl+'/register/regitrationConfirm?token='+token, this.httpOptions)\r\n    .pipe(catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 401) {\r\n        alert(\"Invalid Verification token!\");\r\n        this.router.navigateByUrl(\"/\");\r\n        return throwError('Invalid Verification token!');\r\n      } else if(error.status === 400) {\r\n        alert(\"Verification link has expired\");\r\n        return throwError('Verification link has expired');\r\n      } else {\r\n        return throwError('backend comm error');\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  updateUser(upload) {\r\n    return this.http.post<any>(this.constant.baseApiUrl + '/update', upload)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  getUser() {\r\n    return JSON.parse(sessionStorage.getItem(this.SESSION_NAME));\r\n  }\r\n\r\n  getUserDetails(uname) {\r\n    return this.http.post<any>(this.constant.baseApiUrl+'/login', uname, this.httpOptions)\r\n    .pipe(\r\n    catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 400) {\r\n        alert(\"User not found.\");\r\n        return throwError('User not found');\r\n      } else {\r\n        return throwError('backend comm error');\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  getQuestion(uname) {\r\n    return this.http.get<any>(this.constant.baseApiUrl+'/getQuestion?uname='+uname, this.httpOptions)\r\n    .pipe(catchError((error: HttpErrorResponse) => {\r\n      if(error.status === 400) {\r\n        alert(\"User not found\");\r\n        window.location.reload();\r\n        return throwError('User Not found');\r\n      } else {\r\n        return throwError('backend comm error');\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  checkAnswer(data) {\r\n    return this.http.post<any>(this.constant.baseApiUrl+'/checkAnswer', data)\r\n    .pipe(catchError((error: HttpErrorResponse) => {\r\n      if(error.status === 400) {\r\n        alert(\"User not found\");\r\n        window.location.reload();\r\n        return throwError('User Not found');\r\n      } else {\r\n        return throwError('backend comm error');\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  resetPasswordTokenVerify(token) {\r\n    return this.http.get<any>(this.constant.baseApiUrl+'/forgotPassword/reset?token='+token, this.httpOptions)\r\n    .pipe(catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 401) {\r\n        alert(\"Invalid Verification token!\");\r\n        this.router.navigateByUrl(\"/\");\r\n        return throwError('Invalid Verification token!');\r\n      } else if(error.status === 400) {\r\n        alert(\"Verification link has expired\");\r\n        this.router.navigateByUrl(\"/\");\r\n        return throwError('Verification link has expired');\r\n      } else {\r\n        return throwError('backend comm error');\r\n      }\r\n    })\r\n    );\r\n  }\r\n\r\n  resetPassword(user, token) {\r\n    return this.http.post<any>(this.constant.baseApiUrl + '/resetPassword?token='+token, JSON.stringify(user), this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 400) {\r\n          alert(\"User already exists!\");\r\n          window.location.reload();\r\n          return throwError('User Exists');\r\n        } else {\r\n          return throwError('backend comm error');\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  getUpdated(){\r\n    return this.UPDATED;\r\n  }\r\n\r\n  setUpdated(b:boolean){\r\n    this.UPDATED = b;\r\n  }\r\n\r\n  isSocial(){\r\n    return this.ISSOCIAL;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable} from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompressorService {\r\n\r\n  constructor() { }\r\n  compress(file: File): Observable<any> {\r\n    const width = 100; \r\n    const height = 100;\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    return Observable.create(observer => {\r\n      reader.onload = ev => {\r\n        const img = new Image();\r\n        img.src = (ev.target as any).result;\r\n        (img.onload = () => {\r\n          const elem = document.createElement('canvas');\r\n          elem.width = width;\r\n          elem.height = height\r\n          const ctx = <CanvasRenderingContext2D>elem.getContext('2d');\r\n          ctx.drawImage(img, 0, 0, width, height);\r\n          ctx.canvas.toBlob(\r\n            blob => {\r\n              observer.next(\r\n                new File([blob], file.name, {\r\n                  type: 'image/jpeg',\r\n                  lastModified: Date.now(),\r\n                }),\r\n              );\r\n            },\r\n            'image/jpeg',\r\n            1,\r\n          );\r\n        }),\r\n          (reader.onerror = error => observer.error(error));\r\n      };\r\n    });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Questions } from './Questions';\r\n\r\n@Injectable()\r\nexport class ConstantsService{\r\n    readonly baseAppUrl: string = 'http://35.225.246.52:4200';\r\n    readonly baseApiUrl: string = 'http://35.225.246.52:8080';\r\n    readonly key: string = \"bider password encryption\";\r\n    readonly questions: Questions[] = [\r\n      {\r\n        \"id\": \"084b918e-15cd-49ca-8d4b-80257860432b\",\r\n        \"question\": \"What is your mother's maiden name?\",\r\n        \"shortName\": \"maidenName\"\r\n      },\r\n      {\r\n        \"id\": \"0d40a4ea-1cb9-4abf-9252-31528fc4c07e\",\r\n        \"question\": \"Where was your best family vacation as a kid?\",\r\n        \"shortName\": \"vacationName\"\r\n      },\r\n      {\r\n        \"id\": \"3d6e415a-88ff-4467-af92-1b512229dca3\",\r\n        \"question\": \"Where were you born?\",\r\n        \"shortName\": \"birthPlace\"\r\n      },\r\n      {\r\n        \"id\": \"573e6cd5-49f6-44c9-8412-47c9664028d4\",\r\n        \"question\": \"What is your first pet's name?\",\r\n        \"shortName\": \"petName\"\r\n      },\r\n      {\r\n        \"id\": \"72a8916e-7dd2-4194-866e-9bcc20a66908\",\r\n        \"question\": \"What is your childhood nickname?\",\r\n        \"shortName\": \"nickName\"\r\n      },\r\n      {\r\n        \"id\": \"9c789c5d-e7ce-4f44-9e47-72a9e7917874\",\r\n        \"question\": \"Who was your childhood hero?\",\r\n        \"shortName\": \"heroName\"\r\n      },\r\n      {\r\n        \"id\": \"bed4c381-e4d8-49c3-a91e-43bf53469e65\",\r\n        \"question\": \"What was your first car?\",\r\n        \"shortName\": \"firstCar\"\r\n      },\r\n      {\r\n        \"id\": \"c57443e8-a21d-4b11-aeca-23f63d112a9b\",\r\n        \"question\": \"What is your favourite hobby?\",\r\n        \"shortName\": \"hobbyName\"\r\n      },\r\n      {\r\n        \"id\": \"c5d26eca-9b2c-46b0-ba73-50f615bbe67b\",\r\n        \"question\": \"What elementary school did you attend?\",\r\n        \"shortName\": \"schoolName\"\r\n      }\r\n    ]\r\n}","import { Injectable } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport {Md5} from 'ts-md5/dist/md5';\r\nimport { ConstantsService } from './constants.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\nexport class EncryptService {\r\n\r\n    constructor(private constant : ConstantsService) { }\r\n    encrypt(text) {\r\n        var encText = CryptoJS.AES.encrypt(text, this.constant.key);\r\n        return encText.toString();\r\n      }\r\n\r\n      decrypt(text) {\r\n        var encText = CryptoJS.AES.decrypt(text, this.constant.key);\r\n        return encText.toString(CryptoJS.enc.Utf8);\r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n    test : Date = new Date();\n\n    constructor(private router: Router ) {}\n\n    ngOnInit() {\n\n    }\n    getPath(){\n      return this.router.url;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\nimport { Location, PopStateEvent } from '@angular/common';\nimport { AuthServiceAPI } from '../auth.service';\nimport { AuthService, GoogleLoginProvider } from 'angularx-social-login';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { RestApiService } from '../rest-api.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n    public isCollapsed = true;\n    private lastPoppedUrl: string;\n    private yScrollStack: number[] = [];\n    titles = [];\n    filteredTitle;\n    filterValue;\n\n    constructor(public location: Location,\n        private router: Router,\n        public authApi: AuthServiceAPI,\n        private authService: AuthService,\n        private restApi: RestApiService) {\n    }\n\n    ngOnInit() {\n      this.router.events.subscribe((event) => {\n        this.isCollapsed = true;\n        if (event instanceof NavigationStart) {\n           if (event.url != this.lastPoppedUrl)\n               this.yScrollStack.push(window.scrollY);\n       } else if (event instanceof NavigationEnd) {\n           if (event.url == this.lastPoppedUrl) {\n               this.lastPoppedUrl = undefined;\n               window.scrollTo(0, this.yScrollStack.pop());\n           } else\n               window.scrollTo(0, 0);\n       }\n     });\n     this.location.subscribe((ev:PopStateEvent) => {\n         this.lastPoppedUrl = ev.url;\n     });\n\n     if(this.authApi.isLoggedIn()) {\n        this.restApi.getTitles().subscribe((data)=>{\n            this.titles = data;\n        });\n    }\n\n    }\n\n    logout() {\n        if(this.authApi.isLoggedIn()) {\n            this.authApi.logout();\n            if(this.authApi.isSocial()){\n                this.authService.signOut();\n            }\n            this.router.navigateByUrl('');\n        }\n    }\n\n    filterTitleValue(searchValue: string){\n        this.filterValue = searchValue.toLowerCase();\n        this.filteredTitle = this.titles.filter(option => option.toLowerCase().includes(this.filterValue));\n    }\n\n    searchButton(searchValue: string){\n        this.router.navigateByUrl('/search/'+searchValue);\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { ConstantsService } from './constants.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class RememberMeService {\r\n\r\n    constructor(private constant: ConstantsService) { }\r\n\r\n    rememberUser(username:any): string {\r\n        var random = Math.random().toString();\r\n        localStorage.setItem(random, username);\r\n        return random;\r\n    }\r\n\r\n    getRememberedUser(id:string): string {\r\n        return localStorage.getItem(id);\r\n    }\r\n\r\n    deleteRememberedUser(id:string) {\r\n        localStorage.removeItem(id);\r\n     }\r\n\r\n  }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { ConstantsService } from './constants.service';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class RestApiService {\r\n  \r\n  COOKIE_NAME = \"rememberMe\";\r\n  SESSION_NAME = \"currentUser\";\r\n  constructor(private http: HttpClient,\r\n              private constant: ConstantsService) { }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  newPost(data) {\r\n    return this.http.post<any>(this.constant.baseApiUrl + '/post/newPost?user='+this.getUser(), data)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  getPostForUser(){\r\n    return this.http.get<any>(this.constant.baseApiUrl+\"/post/userPosts?user=\"+this.getUser())\r\n    .pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  getPosts(){\r\n    return this.http.get<any>(this.constant.baseApiUrl+\"/post/posts?user=\"+this.getUser())\r\n    .pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  getUser() {\r\n    return JSON.parse(sessionStorage.getItem(this.SESSION_NAME));\r\n  }\r\n\r\n  addFavorite(postData){\r\n    return this.http.post<any>(this.constant.baseApiUrl + '/favoritePost?user='+this.getUser(), postData)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  removeFavorite(postData){\r\n    return this.http.post<any>(this.constant.baseApiUrl + '/deleteFavoritePost?user='+this.getUser(), postData)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  getFavorite(){\r\n    return this.http.get<any>(this.constant.baseApiUrl + '/favorites?user='+this.getUser())\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  getTitles(){\r\n    return this.http.get<any>(this.constant.baseApiUrl + '/post/titles?user='+this.getUser())\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  getSearchResults(search){\r\n    return this.http.get<any>(this.constant.baseApiUrl + '/post/search?user='+this.getUser()+'&search='+search)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n\r\n  bidPost(postId, bidAmt){\r\n    return this.http.get<any>(this.constant.baseApiUrl + '/post/bid?user='+this.getUser()+'&postId='+postId+'&bidAmt='+bidAmt)\r\n    .pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError('backend comm error');\r\n      })\r\n    )\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { EncryptService } from '../shared/encode.service';\nimport { AuthServiceAPI } from '../shared/auth.service';\nimport { Questions } from '../shared/Questions';\nimport { ConstantsService } from '../shared/constants.service';\nimport { AuthService, GoogleLoginProvider} from 'angularx-social-login';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n    focus;\n    focus1;\n    focus2;\n    focus3;\n    focus4;\n    focus5;\n    focus6;\n    passwordStregth;\n    passwordError;\n    allQtns: Questions[];\n    default: Questions;\n    placeholder=\" Select security question\";\n    created = false;\n\n    @Input()\n    user = {userName: '', password: '', firstName:'', lastName: '', securityQuestion: new Questions, answer: '', social:false, socialImage:null}\n\n    @Input()\n    Re_password;\n\n    @Input()\n    password;\n\n    constructor(public authApi: AuthServiceAPI,\n                public encryption: EncryptService,\n              private constant: ConstantsService,\n              private authService: AuthService,\n              private router: Router) { }\n\n    ngOnInit() {\n        this.allQtns = this.constant.questions;\n    }\n\n    onChange(){\n        this.placeholder = \"\";\n    }\n\n    signup() {\n        if(this.password === this.Re_password) {\n            this.created = true;\n            this.user.password = this.encryption.encrypt(this.password);\n            console.log(this.user);\n            console.log(JSON.stringify(this.user));\n            console.log(this.constant.baseApiUrl);\n            this.authApi.createUser(this.user).subscribe((data) => {\n                console.log(data);\n                alert(\"Please verify the email to complete registration.\");\n                window.location.reload();\n            })\n        }\n        else {\n            this.passwordError = \"Password do not match\";\n        }\n    }\n\n    signupGoogle(){\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(userData => {\n            console.log(userData);\n            this.user.firstName = userData.firstName;\n            this.user.lastName = userData.lastName;\n            this.user.userName = userData.email;\n            this.user.social = true;\n            this.user.socialImage = userData.photoUrl;\n            this.user.securityQuestion.id = \"c5d26eca-9c2c-46c0-ca73-50f615cce67c\";\n            this.user.securityQuestion.question = \"Google Account\";\n            this.user.securityQuestion.shortName = \"google\";\n            this.authApi.createUser(this.user).subscribe((data) => {\n                console.log(data);\n                sessionStorage.setItem(\"currentUser\", JSON.stringify(data.userName));\n                this.authApi.ISSOCIAL = true;\n                if(data.country != null && data.phone != null){\n                    this.authApi.setUpdated(true);\n                }\n                this.router.navigateByUrl('/profile');\n            })\n        })\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBvcnQvc3VwcG9ydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IPayPalConfig, ICreateOrderRequest } from 'ngx-paypal';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.css']\n})\nexport class SupportComponent implements OnInit {\n  public payPalConfig?: IPayPalConfig;\n  price = '1';\n  constructor() { }\n\n  ngOnInit(): void {\n    this.initConfig();\n  }\n\n  private initConfig(): void {\n    \n    this.payPalConfig = {\n    currency: 'AUD',\n    clientId: 'AU4HzCjN1Gh9wtU8HHImcJC-YgjpDHXEtC2NNuwZYySnOTWhTKwt-M_ooduWJO1xivfdajSGvQRlFZxI',\n    createOrderOnClient: (data) => <ICreateOrderRequest>{\n      intent: 'CAPTURE',\n      purchase_units: [\n        {\n          amount: {\n            currency_code: 'AUD',\n            value: this.price\n          }\n        }\n      ]\n    },\n    advanced: {\n      commit: 'true'\n    },\n    style: {\n      label: 'paypal',\n      layout: 'vertical'\n    },\n    onApprove: (data, actions) => {\n      console.log('onApprove - transaction was approved, but not authorized', data, actions);\n      actions.order.get().then(details => {\n        alert('Transaction completed by ' + details.payer.name.given_name);\n        console.log('onApprove - you can get full order details inside onApprove: ', details);\n      });\n    },\n    onClientAuthorization: (data) => {\n      console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n      //this.showSuccess = true;\n    },\n    onCancel: (data, actions) => {\n      console.log('OnCancel', data, actions);\n    },\n    onError: err => {\n      console.log('OnError', err);\n    },\n    onClick: (data, actions) => {\n      console.log(this.price);\n      console.log('onClick', data, actions);\n    },\n  };\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlcmlmaWNhdGlvbi9yZWdpc3RyYXRpb25Db25maXJtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport { AuthServiceAPI } from '../shared/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-register-confirm',\r\n    templateUrl: './registrationConfirm.component.html',\r\n    styleUrls: ['./registrationConfirm.component.scss']\r\n})\r\nexport class RegisterConfirmComponent implements OnInit {\r\n\r\n    constructor(private authApi: AuthServiceAPI,\r\n                private route: ActivatedRoute,\r\n                private router: Router) { \r\n                }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    register(){\r\n        this.route.params.subscribe( (param) => {\r\n            this.authApi.confirmUser(param.token).subscribe((data) => {\r\n                console.log(JSON.stringify(data));\r\n                alert(\"Account verified\");\r\n                this.router.navigateByUrl('/profile');\r\n              });\r\n        });\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*!\n\n=========================================================\n* Argon Design System Angular - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-design-system-angular\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-design-system-angular/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}